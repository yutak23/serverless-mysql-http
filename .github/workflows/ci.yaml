name: ci

on:
  push:
    branches:
      - '**'
  # pull_request:
  #   branches:
  #     - '**'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        mysql-version: ['mysql:8.0', 'mysql:8.2']
    name: mysql-version_${{ matrix.mysql-version }}_test

    steps:
      - uses: actions/checkout@v3

      - name: Setup MySQL Server
        run: |-
          docker run -d \
            -e MYSQL_ALLOW_EMPTY_PASSWORD=yes \
            -e TZ=UTC \
            -v $PWD/data/mysql:/var/lib/mysql/ \
            -v $PWD/mysql/my.cnf:/etc/mysql/conf.d/my.cnf \
            -p 3306:3306 \
            --health-cmd='mysqladmin ping -h localhost' \
            --health-interval=10s \
            --health-timeout=5s \
            --health-retries=3 \
            ${{ matrix.mysql-version }}

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: Initialize database
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client
          docker ps -al
          sleep 5
          mysql -h 127.0.0.1 -u root < tests/sql/1_schema.sql
          mysql -h 127.0.0.1 -u root < tests/sql/2_data.sql

      - name: Add hosts to /etc/hosts
        run: sudo echo "127.0.0.1 http-localhost" | sudo tee -a /etc/hosts

      - name: Install
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Server start
        run: yarn express &

      - name: Wait for server
        run: curl --retry 10 --retry-connrefused --retry-delay 5 --retry-max-time 60 http://localhost:3000/healthcheck

      - name: Test
        run: yarn test

  docker-build:
    needs: test
    runs-on: ubuntu-latest
    name: docker-build
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: Build docker image
        run: yarn docker:build
